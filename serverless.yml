service: live020

package:
  individually: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs20.x
  deploymentMethod: direct
  architecture: arm64
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminGetUser
          Resource: !GetAtt CognitoUserPool.Arn
  environment:
    COGNITO_CLIENT_ID: !Ref CognitoUserPoolClient
    COGNITO_USER_POOL_ID: !Ref CognitoUserPool
  httpApi:
    authorizers:
      CognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}
        audience:
          - !Ref CognitoUserPoolClient


custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    exclude:
      - '@aws-sdk/*'
    concurrency: 10

functions:
  signUp:
    handler: src/functions/signUp.handler
    events:
      - httpApi:
          method: POST
          path: /auth/sign-up

  signIn:
    handler: src/functions/signIn.handler
    events:
      - httpApi:
          method: POST
          path: /auth/sign-in

  accountConfirmation:
    handler: src/functions/accountConfirmation.handler
    events:
      - httpApi:
          method: POST
          path: /auth/account-confirmation

  refreshToken:
    handler: src/functions/refreshToken.handler
    events:
      - httpApi:
          method: POST
          path: /auth/refresh-token

  forgotPassword:
    handler: src/functions/forgotPassword.handler
    events:
      - httpApi:
          method: POST
          path: /auth/forgot-password

  resetPassword:
    handler: src/functions/resetPassword.handler
    events:
      - httpApi:
          method: POST
          path: /auth/reset-password

  profile:
    handler: src/functions/profile.handler
    events:
      - httpApi:
          method: GET
          path: /profile
          authorizer:
            name: CognitoAuthorizer

  cognitoCustomMessage:
    handler: src/functions/cognitoCustomMessage.handler
    events:
      - cognitoUserPool:
          pool: CognitoUserPool
          trigger: CustomMessage
          existing: true
          forceDeploy: true

resources:
  Resources:
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: CognitoUserPoolClient
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        TokenValidityUnits:
          AccessToken: hours
          RefreshToken: hours
        AccessTokenValidity: 3
        RefreshTokenValidity: 48

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: CognitoUserPool
        MfaConfiguration: OFF
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        UsernameAttributes:
          - email
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
            - Name: verified_phone_number
              Priority: 2
        Policies:
          PasswordPolicy:
            MinimumLength: 10
            RequireLowercase : false
            RequireNumbers : false
            RequireSymbols : false
            RequireUppercase : false
            TemporaryPasswordValidityDays: 2
        Schema:
          - Name: given_name
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: family_name
            Mutable: true
            Required: true
            AttributeDataType: String
        DeletionProtection: INACTIVE

